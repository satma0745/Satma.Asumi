@page "/users"

<PageTitle>Users</PageTitle>

<MudText Typo="Typo.h3">Users</MudText>

<MudTable ContainerClass="mt-8" ServerData="LoadUsers" Hover Striped>
    <HeaderContent>
        <MudTh>#</MudTh>
        <MudTh>Name</MudTh>
        <MudTh>Phone number</MudTh>
        <MudTh>E-Mail</MudTh>
        <MudTh>Role</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="#">@context.RowNumber</MudTd>
        <MudTd DataLabel="Name">@context.DisplayName</MudTd>
        <MudTd DataLabel="Phone number">@context.PhoneNumber</MudTd>
        <MudTd DataLabel="E-Mail">@context.Email</MudTd>
        <MudTd DataLabel="Role">@context.Role</MudTd>
    </RowTemplate>
    <NoRecordsContent>
        <MudText>No users found.</MudText>
    </NoRecordsContent>
    <LoadingContent>
        <MudText>Loading...</MudText>
    </LoadingContent>
    <PagerContent>
        <MudTablePager />
    </PagerContent>
</MudTable>

@code
{
    [Inject]
    private AsumiDbContext DbContext { get; set; } = null!;
    
    private async Task<TableData<UserViewModel>> LoadUsers(TableState tableState, CancellationToken cancellationToken)
    {
        var totalUsersCount = await DbContext.Users.CountAsync(cancellationToken);

        var skippedUsersCount = tableState.PageSize * tableState.Page;
        var userEntities = await DbContext.Users
            .Skip(skippedUsersCount)
            .Take(tableState.PageSize)
            .ToListAsync(cancellationToken);

        var users = userEntities.Select((userEntity, index) => new UserViewModel
        {
            RowNumber = index + skippedUsersCount + 1,
            DisplayName = userEntity.DisplayName,
            PhoneNumber = userEntity.PhoneNumber,
            Email = userEntity.Email,
            Role = userEntity.Role
        });

        return new TableData<UserViewModel>
        {
            Items = users,
            TotalItems = totalUsersCount
        };
    }
    
    private class UserViewModel
    {
        public int RowNumber { get; init; }
        public required string DisplayName { get; init; }
        public required string PhoneNumber { get; init; }
        public required string Email { get; init; }
        public required UserRole Role { get; init; }
    }
}
